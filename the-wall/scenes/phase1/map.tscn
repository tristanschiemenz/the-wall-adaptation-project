[gd_scene load_steps=22 format=4 uid="uid://kdkyrfba112d"]

[ext_resource type="Texture2D" uid="uid://dq3lmacwkgv6x" path="res://assets/phase1/wall_lantern.png" id="1_u5ufe"]
[ext_resource type="Texture2D" uid="uid://d31eiav7v0ekq" path="res://assets/phase1/wall_normal.png" id="2_set34"]
[ext_resource type="Texture2D" uid="uid://bpiu7m24amhbu" path="res://assets/phase1/wall_stair.png" id="3_gc7s2"]
[ext_resource type="Texture2D" uid="uid://bwjscsvep7cmy" path="res://assets/phase1/ocean_animated.tres" id="4_fbwdq"]
[ext_resource type="Script" path="res://scripts/phase1/map.gd" id="5_t1hlk"]
[ext_resource type="Texture2D" uid="uid://c54dffb8x3hso" path="res://assets/phase1/2d_lights_and_shadows_neutral_point_light.webp" id="6_84wps"]
[ext_resource type="AudioStream" uid="uid://cqw6nxfc44j8x" path="res://assets/phase1/sounds/fly_by.mp3" id="7_y4kne"]
[ext_resource type="AudioStream" uid="uid://c7c3s5n4j5q36" path="res://assets/phase1/sounds/ambient-noise-236388.mp3" id="8_8kcsf"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_dg840"]
texture = ExtResource("1_u5ufe")
texture_region_size = Vector2i(64, 64)
0:0/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_yhoj8"]
texture = ExtResource("2_set34")
texture_region_size = Vector2i(64, 64)
0:0/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_gv5er"]
texture = ExtResource("3_gc7s2")
texture_region_size = Vector2i(64, 64)
0:0/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_6s4sn"]
texture = ExtResource("4_fbwdq")
texture_region_size = Vector2i(64, 64)
use_texture_padding = false
0:0/0 = 0

[sub_resource type="TileSet" id="TileSet_aw4hy"]
tile_size = Vector2i(64, 64)
sources/4 = SubResource("TileSetAtlasSource_dg840")
sources/5 = SubResource("TileSetAtlasSource_yhoj8")
sources/6 = SubResource("TileSetAtlasSource_gv5er")
sources/7 = SubResource("TileSetAtlasSource_6s4sn")

[sub_resource type="Shader" id="Shader_1ixfa"]
code = "// Rain and Snow shader by Brian Smith (steampunkdemon.itch.io)
// MIT licence

shader_type canvas_item;

uniform float rain_amount = 200.0;
uniform float near_rain_length : hint_range(0.01, 1.0) = 0.2;
uniform float far_rain_length : hint_range(0.01, 1.0) = 0.1;
uniform float near_rain_width : hint_range(0.1, 1.0) = 1.0;
uniform float far_rain_width : hint_range(0.1, 1.0) = 0.5;
uniform float near_rain_transparency : hint_range(0.1, 1.0) = 1.0;
uniform float far_rain_transparency : hint_range(0.1, 1.0) = 0.5;
// Replace the below reference to source_color with hint_color if you are using a version of Godot before 4.0.
uniform vec4 rain_color : source_color = vec4(0.8, 0.8, 0.8, 1.0);
uniform float base_rain_speed : hint_range(0.1, 1.0) = 0.5;
uniform float additional_rain_speed : hint_range(0.1, 1.0) = 0.5;
uniform float slant : hint_range(-1.0, 1.0) = 0.2;

void fragment() {
// To control the rainfall from your program comment out the below line and add a new uniform above as:
// uniform float time = 10000.0;
// Then update the time uniform from your _physics_process function by adding delta. You can then pause the rainfall by not changing the time uniform.
	float time = 10000.0 + TIME;

// Uncomment the following line if you are applying the shader to a TextureRect and using a version of Godot before 4.0.
//	COLOR = texture(TEXTURE,UV);

	vec2 uv = vec2(0.0);
	float remainder = mod(UV.x - UV.y * slant, 1.0 / rain_amount);
	uv.x = (UV.x - UV.y * slant) - remainder;
	float rn = fract(sin(uv.x * rain_amount));
	uv.y = fract((UV.y + rn));

// Blurred trail. Works well for rain:
//	COLOR = mix(COLOR, rain_color, smoothstep(1.0 - (far_rain_length + (near_rain_length - far_rain_length) * rn), 1.0, fract(uv.y - time * (base_rain_speed + additional_rain_speed * rn))) * (far_rain_transparency + (near_rain_transparency - far_rain_transparency) * rn) * step(remainder * rain_amount, far_rain_width + (near_rain_width - far_rain_width) * rn));

// No trail. Works well for snow:
	COLOR = mix(COLOR, rain_color, step(1.0 - (far_rain_length + (near_rain_length - far_rain_length) * rn), fract(uv.y - time * (base_rain_speed + additional_rain_speed * rn))) * (far_rain_transparency + (near_rain_transparency - far_rain_transparency) * rn) * step(remainder * rain_amount, far_rain_width + (near_rain_width - far_rain_width) * rn));
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nmrhs"]
shader = SubResource("Shader_1ixfa")
shader_parameter/rain_amount = 150.0
shader_parameter/near_rain_length = 0.1
shader_parameter/far_rain_length = 0.1
shader_parameter/near_rain_width = 1.0
shader_parameter/far_rain_width = 0.5
shader_parameter/near_rain_transparency = 1.0
shader_parameter/far_rain_transparency = 0.5
shader_parameter/rain_color = Color(0.8, 0.8, 0.8, 1)
shader_parameter/base_rain_speed = 0.277
shader_parameter/additional_rain_speed = 0.5
shader_parameter/slant = 0.222

[sub_resource type="SegmentShape2D" id="SegmentShape2D_bb70m"]
a = Vector2(319.857, 140.996)
b = Vector2(-9, 140.425)

[sub_resource type="SegmentShape2D" id="SegmentShape2D_4il2p"]
a = Vector2(323.143, 161.568)
b = Vector2(-12.1429, 161.711)

[sub_resource type="SegmentShape2D" id="SegmentShape2D_306xr"]
a = Vector2(-2.041, 161.711)
b = Vector2(-2.041, 135.425)

[sub_resource type="SegmentShape2D" id="SegmentShape2D_tadow"]
a = Vector2(274.286, 160.568)
b = Vector2(273.857, 135.425)

[sub_resource type="Curve2D" id="Curve2D_vcp1t"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, 20.636, 20, 0, 0, 0, 0, 262.35, 20)
}
point_count = 2

[sub_resource type="RectangleShape2D" id="RectangleShape2D_3rp7l"]
size = Vector2(321.857, 21.2857)

[node name="Map_P1" type="TileMapLayer"]
texture_filter = 1
position = Vector2(0, -259.975)
scale = Vector2(7, 7)
tile_map_data = PackedByteArray("AAAAAAAABwAAAAAAAAABAAAABwAAAAAAAAACAAAABwAAAAAAAAADAAAABwAAAAAAAAAEAAAABwAAAAAAAAAAAAIABAAAAAAAAAABAAIABgAAAAAAAAACAAIABQAAAAAAAAADAAIABAAAAAAAAAAEAAIABgAAAAAAAAAAAAEABwAAAAAAAAABAAEABwAAAAAAAAACAAEABwAAAAAAAAADAAEABwAAAAAAAAAEAAEABwAAAAAAAAA=")
tile_set = SubResource("TileSet_aw4hy")
script = ExtResource("5_t1hlk")

[node name="RainRect" type="ColorRect" parent="."]
texture_filter = 1
material = SubResource("ShaderMaterial_nmrhs")
offset_top = 37.0
offset_right = 273.0
offset_bottom = 194.0
color = Color(1, 1, 1, 0)

[node name="RainTimer" type="Timer" parent="."]
wait_time = 30.0
autostart = true

[node name="WallCollision" type="StaticBody2D" parent="."]

[node name="upper_wall" type="CollisionShape2D" parent="WallCollision"]
position = Vector2(0, -5.625)
shape = SubResource("SegmentShape2D_bb70m")

[node name="lower_wall" type="CollisionShape2D" parent="WallCollision"]
position = Vector2(0, -1.42)
shape = SubResource("SegmentShape2D_4il2p")

[node name="left_wall" type="CollisionShape2D" parent="WallCollision"]
shape = SubResource("SegmentShape2D_306xr")

[node name="right_wall" type="CollisionShape2D" parent="WallCollision"]
shape = SubResource("SegmentShape2D_tadow")

[node name="left_light" type="PointLight2D" parent="."]
position = Vector2(32.571, 134.858)
scale = Vector2(1, 0.5)
shadow_enabled = true
texture = ExtResource("6_84wps")
height = 30.0

[node name="right_light" type="PointLight2D" parent="."]
position = Vector2(224.429, 134.858)
scale = Vector2(1, 0.5)
energy = 0.8
shadow_enabled = true
texture = ExtResource("6_84wps")
height = 30.0

[node name="CanvasModulate" type="CanvasModulate" parent="."]
color = Color(0.29219, 0.29219, 0.29219, 1)

[node name="Flicker_timer" type="Timer" parent="."]
wait_time = 10.0
autostart = true

[node name="SpawnPath" type="Path2D" parent="."]
curve = SubResource("Curve2D_vcp1t")

[node name="SpawnPathFollower" type="PathFollow2D" parent="SpawnPath"]
position = Vector2(27.3689, 20)
progress = 6.77856

[node name="WallArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="WallArea"]
position = Vector2(159.071, 148.354)
shape = SubResource("RectangleShape2D_3rp7l")

[node name="fly_by_Timer" type="Timer" parent="."]
wait_time = 23.0
autostart = true

[node name="fly_by_audio" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("7_y4kne")

[node name="ambient_noise" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("8_8kcsf")
autoplay = true

[connection signal="timeout" from="RainTimer" to="." method="_on_rain_timer_timeout"]
[connection signal="timeout" from="Flicker_timer" to="." method="_on_flicker_timer_timeout"]
[connection signal="timeout" from="fly_by_Timer" to="." method="_on_fly_by_timer_timeout"]
[connection signal="finished" from="ambient_noise" to="." method="_on_ambient_noise_finished"]
